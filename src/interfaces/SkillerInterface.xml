<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE interface SYSTEM "interface.dtd">
<interface name="SkillerInterface" author="Tim Niemueller" year="2008-2010">
  <constants>
    <enum name="SkillStatusEnum">
      <comment>
	This determines the current status of skill execution.
      </comment>
      <item name="S_INACTIVE">No skill is running.</item>
      <item name="S_FINAL">The skill string has been successfully processed.</item>
      <item name="S_RUNNING">The execution is still running.</item>
      <item name="S_FAILED">The execution failed and cannot succeed anymore.</item>
    </enum>
  </constants>
  <data>
    <comment>
      The interface provides access to the skill execution runtime plugin.
      It provides basic status information about skiller and allows for
      calling skills via messages. It can also be used to manually restart
      the Lua interpreter if something is wedged.
    </comment>
    <field type="string" length="1024" name="skill_string">
      Combined string showing as much as possible of the currently
      executed skills string, at most the first 1023 bytes of it.
      Must be properly null-terminated. Shall be of the following
      format: S skill1(param) || S skill2() [||...]  where S is one of
      F, R, X (marking the skill state, where X is failure) and
      skill1(param) etc. are the skills of the respective
      sandboxes. || is used to separate the strings (representing
      concurrent execution). Inactive channels shall be omitted.
    </field>
    <field type="string" length="128" name="error">
      String describing the error. Can be set by a skill when it
      fails. Shall be of the form: N string | N string...
      where N denotes the skill channel and string the respective
      error string. Active channels which did not post an error
      message shall be omitted.
    </field>
    <field type="unsigned int" name="exclusive_controller">
      Instance serial of the exclusive controller of the skiller. If this does not
      carry your instance serial your exec messages will be ignored. Aquire control with
      the AquireControlMessage. Make sure you release control before exiting.
    </field>
    <field type="SkillStatusEnum" name="status" length="16">
      The status of the current skill execution for the appropriate channel.
    </field>
    <field type="unsigned int" length="16" name="msgid">
    </field>
  </data>
  <message name="ExecSkill">
    <comment>Sets the skill string and orders execution of this skill string.</comment>
    <ref>skill_string</ref>
  </message>
  <message name="StopExec">
    <comment>Stops the execution of a skill.</comment>
    <field type="unsigned int" name="channel">Which channel to stop.</field>
  </message>
  <message name="StopAll">
    <comment>Stops the execution of all skills.</comment>
  </message>
  <message name="AcquireControl">
    <comment>Aquires exclusive control over the skiller. The used ID is the
      instance serial of the interface where this message was enqueued.</comment>
  </message>
  <message name="ReleaseControl">
    <comment>Releases previously aquired exclusive control.</comment>
  </message>
</interface>

